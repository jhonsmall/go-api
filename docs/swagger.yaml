basePath: /api
definitions:
  car.Car:
    properties:
      brand:
        type: string
      make:
        type: string
    type: object
host: localhost:3000
info:
  contact: {}
  description: This is a sample golang server with fiber and gorm
  license: {}
  title: Swagger Car API
  version: "1.0"
paths:
  /car:
    get:
      description: get cars
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/car.Car'
            type: array
      summary: List cars
      tags:
      - cars
    post:
      consumes:
      - application/json
      description: create a json car
      parameters:
      - description: Add car
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/car.Car'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/car.Car'
        "400": {}
      summary: Create a car
      tags:
      - cars
  /car/{id}:
    delete:
      consumes:
      - application/json
      description: delete a car by ID
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200": {}
        "400": {}
      summary: Delete a car
      tags:
      - cars
    get:
      consumes:
      - application/json
      description: get car by ID
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/car.Car'
        "400": {}
      summary: Gets all cars
      tags:
      - cars
    put:
      consumes:
      - application/json
      description: update a json car
      parameters:
      - description: Car ID
        in: path
        name: id
        required: true
        type: string
      - description: Add car
        in: body
        name: car
        required: true
        schema:
          $ref: '#/definitions/car.Car'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/car.Car'
        "400": {}
      summary: Update a car
      tags:
      - cars
swagger: "2.0"
