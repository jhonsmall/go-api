{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample golang server with fiber and gorm",
        "title": "Swagger Car API",
        "contact": {},
        "license": {},
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/api",
    "paths": {
        "/car": {
            "get": {
                "description": "get cars",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "List cars",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/car.Car"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "create a json car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Create a car",
                "parameters": [
                    {
                        "description": "Add car",
                        "name": "car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/car.Car"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/car.Car"
                        }
                    },
                    "400": {}
                }
            }
        },
        "/car/{id}": {
            "get": {
                "description": "get car by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Gets all cars",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/car.Car"
                        }
                    },
                    "400": {}
                }
            },
            "put": {
                "description": "update a json car",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Update a car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Add car",
                        "name": "car",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/car.Car"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/car.Car"
                        }
                    },
                    "400": {}
                }
            },
            "delete": {
                "description": "delete a car by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "cars"
                ],
                "summary": "Delete a car",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Car ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {},
                    "400": {}
                }
            }
        }
    },
    "definitions": {
        "car.Car": {
            "type": "object",
            "properties": {
                "brand": {
                    "type": "string"
                },
                "make": {
                    "type": "string"
                }
            }
        }
    }
}